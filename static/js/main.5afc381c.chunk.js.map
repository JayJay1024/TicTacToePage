{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"0OAIA,SAASA,EAAgBC,GAavB,IAXA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,KAIT,SAASG,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKPC,E,2KACSV,GAAI,IAAD,OACd,OACE,cAACK,EAAD,CACEI,MAAOE,KAAKL,MAAMR,QAAQE,GAC1BQ,QAAS,kBAAM,EAAKF,MAAME,QAAQR,Q,+BAMtC,OACE,gCACE,sBAAKO,UAAU,YAAf,UACGI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAErB,sBAAKL,UAAU,YAAf,UACGI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAErB,sBAAKL,UAAU,YAAf,UACGI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,a,GA1BTC,IAAMC,WAiCpBC,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,QAAS,CAAC,CACRnB,QAASoB,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,wDAWPrB,GACV,IAAMiB,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DtB,EADUmB,EAAQA,EAAQhB,OAAS,GACjBH,QAAQwB,QAG5BzB,EAAgBC,IAAYA,EAAQE,KAIxCF,EAAQE,GAAKW,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACZN,QAASA,EAAQO,OAAO,CAAC,CACvB1B,QAASA,KAEXsB,WAAYH,EAAQhB,OACpBoB,SAAUV,KAAKK,MAAMK,a,6BAIlBI,GACLd,KAAKY,SAAS,CACZH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,+BAIlB,IAkBJC,EAlBG,OACDT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS/B,EAAgB8B,EAAQ7B,SAEjC+B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAE/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBAEA,OACE,6BACE,wBAAQvB,QAAS,kBAAM,EAAKyB,OAAOF,IAAnC,SAA2CC,KADpCD,MAaf,OALEL,EADEE,EACO,WAAaA,EAEb,iBAAmBjB,KAAKK,MAAMK,QAAU,IAAM,KAIvD,sBAAKd,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEZ,QAAS6B,EAAQ7B,QACjBU,QAAS,SAACR,GAAD,OAAO,EAAKkC,YAAYlC,QAGrC,sBAAKO,UAAU,YAAf,UACE,8BAAMmB,IACN,6BAAKG,c,GA1EIhB,IAAMC,WAmFzBqB,IAASC,OACP,cAACrB,EAAD,IACAsB,SAASC,eAAe,W","file":"static/js/main.5afc381c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction calculateWinner(squares) {\n  // 枚举全部的胜利棋盘\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// In React terms, the Square components are now controlled components. The Board has full control over them\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();  // We call .slice() to create a copy of the squares array to modify instead of modifying the existing array\n    \n    // 如果赢了或棋盘已满\n    if (calculateWinner(squares) || squares[i]) {\n      return\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    })\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      void(step)\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        )\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}